{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/map/map.component.html","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/backend/backend.service.ts","webpack:///./src/app/map/map.component.css","webpack:///./src/app/map/map.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<h1>{{title}}</h1>\\n\\n<mat-tab-group>\\n\\n  \\t\\t<mat-tab label=\\\"Map\\\">\\n  \\t\\t\\t<app-map>\\n\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\tleaflet\\n\\t\\t\\t\\t\\t(leafletMapReady) = \\\"onMapReady($event)\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</app-map>\\n\\t\\t</mat-tab>\\n</mat-tab-group>\\n\"","module.exports = \"<h2>Brazil By Municipality</h2>\\n<div class=\\\"info-section\\\">\\n<div class=\\\"h3 info-item\\\" id=\\\"cases-total-found\\\">Total Cases Shown: {{number_cases}}</div>\\n\\n  <div class=\\\"case-filter-option\\\" class=\\\"info-item\\\">\\n  <label for=\\\"case-filter\\\">Imported Cases: </label>\\n   <select id=\\\"case-filter\\\" name=\\\"case-filter\\\" (ngModelChange)=\\\"selectChange($event)\\\" [(ngModel)]=\\\"selectedCase\\\" >\\n      <option *ngFor=\\\"let type of caseTypes\\\"\\n              [value]=\\\"type.key\\\" [innerHtml]=\\\"type.value\\\"></option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\"info-item\\\">\\n  <div class=\\\"year-filter-option\\\" >\\n  <label for=\\\"year-filter\\\">Year: </label>\\n   <select id=\\\"year-filter\\\" type=\\\"year\\\" name=\\\"year-filter\\\">\\n     <option *ngFor = \\\"let i of years\\\">{{i}}</option>\\n   </select>\\n  </div>\\n\\n  <div class=\\\"month-filter-option\\\" >\\n  <label for=\\\"month-filter\\\">Month: </label>\\n   <select id=\\\"month-filter\\\" type=\\\"month\\\" name=\\\"month-filter\\\">\\n     <option *ngFor = \\\"let i of months\\\">{{i}}</option>\\n   </select>\\n  </div>\\n  </div>\\n</div>\\n<div id=\\\"map\\\"></div>\\n\\n<div>{{trimmedJson}}</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Imported Malaria Monitor';\n}\n/*\nonMapReady(map: Map): void {\n    setTimeout(() => {\n      map.invalidateSize();\n    });\n}*/\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { MapComponent } from './map/map.component';\nimport { BackendService } from './backend/backend.service';\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  imports: [\n    HttpModule,\n    HttpClientModule,\n    CommonModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    MatTabsModule,\n    HttpClientModule, \n    MatTabsModule, \n    BrowserAnimationsModule\n  ],\n  declarations: [\n    AppComponent,\n    MapComponent\n  ],\n  providers: [BackendService],\n  bootstrap: [AppComponent],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class AppModule { }\n","import { Injectable, NgModule } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\n\n@Injectable()\nexport class BackendService {\n  mockEndpointToMakeAngualrZoneAsynch = 'http://localhost:8080/nonexistentendpoint';\n  malariaApiUrl = '/api/getmap/?caseType=';\n  staticGeoJsonUrl = 'static/BRA_adm3_NorthWest.json';\n  malariaStaticJson = 'static/BRA_sameMuni_Amazonas.json';\n  homeKey = 'imported-malaria-monitor';\n  immDnsApi = 'https://imported-malaria-monitor.herokuapp.com/api/getmap/?caseType=';\n  isAtHomeKey = true;\n\n  constructor(private http: HttpClient) {\n    let location =  window.location.hostname;\n    if (location && !location.includes(this.homeKey)) {\n      this.isAtHomeKey = false;\n    }\n  }\n\n  getGeoJson() {\n     return this.http.get(this.staticGeoJsonUrl);\n  };\n\n  getMalariaJson(type: string) {\n    if (this.isAtHomeKey) {\n      return this.http.get(this.malariaApiUrl + type);\n    } else {\n      // local\n      let path = this.malariaStaticJson.replace('sameMuni', type);\n      console.log(path);\n      return this.http.get(path);\n    }\n  };\n}\n","module.exports = \"/* Don't put map style here, put style in styles.css */\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFwL21hcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNEQUFzRCIsImZpbGUiOiJzcmMvYXBwL21hcC9tYXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIERvbid0IHB1dCBtYXAgc3R5bGUgaGVyZSwgcHV0IHN0eWxlIGluIHN0eWxlcy5jc3MgKi9cbiJdfQ== */\"","/**\n** API:\nExample call: api/getmap?municipality=Acrel%C3%A2ndia&country=Brazil&caseType=sameMuni&yearMonth=2019-01\n\n*** Case type keys:\nAllCases\nSameMuni\nMuniToMuni\nStateToMuni\nCountryToMuni\n\n*** yearMonth:\nFormat <yyyy-mm>\n\n** 5 query Parameters:\nyearMonth = <yyyy-mm>\ncaseType = [ AllCases, SameMuni, MuniToMuni, StateToMuni, CountryToMuni]\nmuni = <target municipality> // can be empty, return data for all muni in the target state or country\nstate = <target state,  always Amazonas>\ncountry = <target country, always Brazil>\n\ni.e. if the REST endpoint could make a query on the database data with a filter of yyyy-mm and/or a filter of caseType. And return a JSON object {“results”: [{}, {}, {}]} where the {} contain that county json the endpoint current returns.\n*/\n\n\ndeclare var require: any\nimport * as leaflet from 'leaflet';\nimport { Component, OnInit } from '@angular/core';\nimport {forkJoin} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BackendService } from '../backend/backend.service';\n\nexport interface CaseType {\n  key: string;\n  value: string;\n}\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css'],\n  providers: [BackendService]\n})\n\nexport class MapComponent implements OnInit {\n  map = null;\n  location;\n  malariaCountMap;\n  malariaDefaultCaseType=\"sameMuni\";\n  selectedCase = this.malariaDefaultCaseType;\n  brasilNormalizedName = \"Brasil\"\n  number_cases = 0;\n  trimmedJson = '';\n  errormessage = '';\n  mapboxRegisteredDns = \"imported-malaria-monitor.herokuapp.com\";\n  months = [\"January\", \"Feburary\", \"March\", \"April\", \"May\",\n           \"June\", \"July\", \"August\", \"September\",\n           \"October\", \"November\", \"December\"];\n\n  years = [2019, 2018, 2017, 2016, 2015, 2014, 2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003, 2002, 2001, 2000];\n\n  caseTypes: CaseType[] = [\n           {key: 'test', value: 'All Cases'},\n           {key: 'sameMuni', value: 'Same municipality'},\n           {key: 'otherMuni', value: 'From other municipality'},\n           {key: 'otherState', value: 'From other state'},\n           {key: 'otherCountry', value: 'From other country'}];\n\n  legendrows = [{\"0 cases\": \"cases-0\"},\n            {\"10 > cases\": \"cases-to-10\"},\n            {\"50 > cases\": \"cases-to-50\"},\n            {\"100 > cases\": \"cases-to-100\"},\n            {\"500 > cases\": \"cases-to-100\"},\n            {\"1000 > cases\": \"cases-to-100\"}];\n\n  constructor(private service: BackendService) {}\n\n  ngOnInit(){\n    this.location =  window.location.hostname;\n    this.getDataAndStartMap(this.malariaDefaultCaseType);\n  }\n\n  getDataAndStartMap = async(caseType) => {\n    console.log(\"about to path \" + caseType);\n    forkJoin(\n      this.service.getMalariaJson(caseType),\n      this.service.getGeoJson()\n    ).subscribe(([malariajson, geojson]) => {\n        this.makeMalariaCountLookup(malariajson);\n        this.makeMap(geojson);\n    });\n   }\n\n   //ref: https://leafletjs.com/examples/choropleth/\n   getColor = (d) => {\n      if (d == null) d = 0 // Math.floor(Math.random() * 4);\n      return (0 <= d && d < 25) ? '#fef0d9' :\n             (25 <= d && d < 50) ? '#fdcc8a' :\n             (50 <= d && d < 75)  ? '#fc8d59' :\n                        '#d7301f' ; //d ===4\n  }\n\n  selectChange(event) {\n      this.selectedCase = event;\n      console.log(`Getting data for case type ${this.selectedCase}`);\n      this.getDataAndStartMap(this.selectedCase);\n   }\n\n  getDensity(props) {\n    let key = `${props.NAME_2}, ${props.NAME_1}, ${this.brasilNormalizedName}`.toUpperCase();\n    let count = this.malariaCountMap[key] | 0;\n    console.log(`returning  density ${count} for ${key}`)\n    return count;\n  }\n\n  style = (feature) => {\n      let density = this.getDensity(feature.properties);\n      let color = this.getColor(density);\n      console.log(`Fill color is ${color} for density ${density}`)\n      return {\n          fillColor: color,\n          weight: 2,\n          opacity: 1,\n          fillOpacity: 0.7\n      };\n  };\n\n  getMap = () => {\n    return this.map;\n  };\n\n  makeMalariaCountLookup = (malJson) => {\n    const mapString = JSON.stringify(malJson);\n    console.log(\"MAL: \" + mapString);\n\n    this.malariaCountMap = {};\n    malJson.forEach(item => {\n      let key = `${item.Municipality}, ${item.State}, ${this.brasilNormalizedName}`.toUpperCase();\n      this.number_cases += item.count;\n      console.log(`${key} has ${item.count}, total ${this.number_cases}`);\n      this.malariaCountMap[`${item.Municipality}, ${item.State}, ${this.brasilNormalizedName}`.toUpperCase()] = `${item.count}`;\n    });\n  }\n\n  makeMap = (geoJson) => {\n    // if refreshing map, remove the old one\n    if (this.map && this.map.off) {\n      this.map.off();\n      this.map.remove();\n    }\n\n    // start with a view in the middle of Brazil and set zoom and min zoom\n    this.map = leaflet.map('map', {minZoom: 4}).setView([-7.50, -59.00], 5);\n    let legend = leaflet.control({position: 'bottomright'});\n    let self = this;\n    this.map.attributionControl.addAttribution('Imported Malaria');\n    legend.onAdd = (map) => {\n        var div = leaflet.DomUtil.create('div', 'info legend'),\n            grades = [0, 25, 50, 75, 100],\n            labels = [];\n        for (var i = 0; i < grades.length - 1; i++) {\n            div.innerHTML +=\n                '<i style=\"background:' + self.getColor(grades[i] + 1) + '\"></i> ' +\n                grades[i] + (grades[i + 1] ? '&ndash;' + grades[i + 1] + '<br>' : '+');\n        }\n        return div;\n    };\n    legend.addTo(this.map);\n\n    // Add the goemap and test adding data to the item\n    leaflet.geoJSON(geoJson, {\n      style: this.style,\n      onEachFeature: function (feature, layer) {\n        let p = feature.properties;\n        let name = p.NAME_3;\n        let fullName = `${p.NAME_2}, ${p.NAME_1}, ${this.brasilNormalizedName}`;\n        let density = self.getDensity(fullName.toUpperCase());\n        console.log(`feature props key ${fullName}  density ${density}`);\n        layer.bindPopup(`<h1>${name}</h1><div class=\"popup\">${fullName}</div><div <div class=\"popup\">Count ${density}</div>`);\n      }\n    }).addTo(this.map);\n\n    // this only works on the heroku DNS, so ignore it if hot on heroku\n    if (this.location && this.location.includes(this.mapboxRegisteredDns)) {\n      console.log(\"getting tiles\");\n      leaflet.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n        maxZoom: 18,\n        id: 'mapbox.outdoors',\n        accessToken: 'pk.eyJ1Ijoia2RvbGFuIiwiYSI6ImNqeHYzZnRmZjAwdHAzY283azFkdTFzYmsifQ.K-2XaOWsVjN5uIzKAUfLBg'\n      }).addTo(this.map);\n    }\n  } // end getMap\n\n  handleError = (err) => {\n    this.errormessage = \"Cound not retrieve map data\";\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}